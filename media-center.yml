################################################################################
# DOCKER COMPOSE - MEDIA-CENTER-V2 BY JUFTIN
################################################################################

version: "3.7"

################################################################################
# NETWORKING CONFIGURATION
################################################################################

networks:
    traefik:
        external:
            name: traefik_reverse-proxy
    socket-proxy:
        external:
            name: traefik_socket-proxy
    internal:
        driver: bridge

################################################################################
# SERVICES CONFIGURATION
################################################################################

services:


    ########################################################
    # BACK-END APPLICATIONS
    ########################################################

    ####################################
    # WATCHTOWER (CONTAINER IMAGE UPDATING)
    ####################################

    watchtower:
        container_name: watchtower
        image:          containrrr/watchtower:latest
        restart:        unless-stopped
        networks:
            internal:     null
            socket-proxy: null
        environment:
            TZ:                            $TZ
            WATCHTOWER_CLEANUP:            "true"
            WATCHTOWER_REMOVE_VOLUMES:     "true"
            WATCHTOWER_INCLUDE_STOPPED:    "true"
            WATCHTOWER_NO_STARTUP_MESSAGE: "false"
            WATCHTOWER_SCHEDULE:           "0 30 12 * * *"
            DOCKER_HOST:                   tcp://socket-proxy:2375

    ########################################################
    # FRONT-END APPLICATIONS
    ########################################################

    ####################################
    # HEIMDALL (LANDING PAGE)
    ####################################

    heimdall:
        container_name: heimdall
        image:          linuxserver/heimdall:latest
        restart:        ${UNIVERSAL_RESTART_POLICY}
        networks:
            traefik: null
        volumes:
            - ${DOCKER_DIRECTORY}/heimdall/config:/config
        environment:
            - PUID=$PUID
            - PGID=$PGID
            - TZ=$TZ
        labels:
            traefik.enable:                                              true
            traefik.http.routers.heimdall-rtr.rule:                      Host(`${DOMAIN_NAME}`)
            traefik.http.routers.heimdall-rtr.entrypoints:               https
            traefik.http.routers.heimdall-rtr.service:                   heimdall-svc
            traefik.http.services.heimdall-svc.loadbalancer.server.port: 80
            traefik.http.routers.heimdall-rtr.middlewares:               chain-oauth-google@file

    ####################################
    # OMBI (DOWNLOAD REQUESTS)
    ####################################

    ombi:
        container_name: ombi
        image:          linuxserver/ombi:latest
        hostname:       ${OMBI_SUBDOMAIN}
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ:   ${TZ}
        volumes:
            - ${DOCKER_DIRECTORY}/ombi/config:/config
            - ${DOCKER_DIRECTORY}/shared:/shared
        networks:
            traefik: null
        restart:        ${UNIVERSAL_RESTART_POLICY}
        labels:
            traefik.enable:                                          true
            traefik.http.routers.ombi-rtr.rule:                      Host(`${OMBI_SUBDOMAIN}.${DOMAIN_NAME}`)
            traefik.http.routers.ombi-rtr.entrypoints:               https
            traefik.http.routers.ombi-rtr.service:                   ombi-svc
            traefik.http.services.ombi-svc.loadbalancer.server.port: 3579
            traefik.http.routers.ombi-rtr.middlewares:               chain-oauth-google@file

    ####################################
    # PLEX (MOVIES AND TV SERVER)
    ####################################

    plex:
        container_name: plex
        image:          linuxserver/plex:latest
        network_mode:   host
        volumes:
            - ${DOCKER_DIRECTORY}/plex/config:/config
            - ${TV_DIR}:/tv
            - ${MOVIE_DIR}:/movies
            - ${DOCKER_DIRECTORY}/shared:/shared
            # HARDWARE RENDERING DEVICES
            - /dev/dri:/dev/dri
            - /tmp:/transcode
        environment:
            TZ:      ${TZ}
            PUID:    ${PUID}
            PGID:    ${PGID}
            VERSION: docker
        restart:        ${UNIVERSAL_RESTART_POLICY}

    ####################################
    # TAUTULLI (PLEX SERVER MONITORING)
    ####################################

    tautulli:
        container_name: tautulli
        image:          linuxserver/tautulli:latest
        hostname:       ${TAUTULLI_SUBDOMAIN}
        volumes:
            - ${DOCKER_DIRECTORY}/tautulli/config:/config
            - ${DOCKER_DIRECTORY}/plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro
            - ${DOCKER_DIRECTORY}/shared:/shared
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ:   ${TZ}
        networks:
            traefik: null
        restart:        ${UNIVERSAL_RESTART_POLICY}
        labels:
            traefik.enable:                                              true
            traefik.http.routers.tautulli-rtr.rule:                      Host(`${TAUTULLI_SUBDOMAIN}.${DOMAIN_NAME}`)
            traefik.http.routers.tautulli-rtr.entrypoints:               https
            traefik.http.routers.tautulli-rtr.service:                   tautulli-svc
            traefik.http.services.tautulli-svc.loadbalancer.server.port: 8181
            traefik.http.routers.tautulli-rtr.middlewares:               chain-oauth-google@file

    ####################################
    # SONARR (TV SHOW DOWNLOADS)
    ####################################

    sonarr:
        image:          linuxserver/sonarr:latest
        hostname:       ${SONARR_SUBDOMAIN}
        container_name: sonarr
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ:   ${TZ}
        volumes:
            - ${DOCKER_DIRECTORY}/sonarr/config:/config
            - ${COMPLETED_DOWNLOADS}:/downloads
            - ${TV_DIR}:/tv
            - ${DOCKER_DIRECTORY}/shared:/shared
        networks:
            traefik: null
        restart:        ${UNIVERSAL_RESTART_POLICY}
        labels:
            traefik.enable:                                            true
            traefik.http.routers.sonarr-rtr.rule:                      Host(`${SONARR_SUBDOMAIN}.${DOMAIN_NAME}`)
            traefik.http.routers.sonarr-rtr.entrypoints:               https
            traefik.http.routers.sonarr-rtr.service:                   sonarr-svc
            traefik.http.services.sonarr-svc.loadbalancer.server.port: 8989
            traefik.http.routers.sonarr-rtr.middlewares:               chain-oauth-google@file

    ####################################
    # RADARR (MOVIE DOWNLOADS)
    ####################################

    radarr:
        image:          linuxserver/radarr:latest
        hostname:       ${RADARR_SUBDOMAIN}
        container_name: radarr
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ:   ${TZ}
        volumes:
            - ${DOCKER_DIRECTORY}/radarr/config:/config
            - ${COMPLETED_DOWNLOADS}:/downloads
            - ${MOVIE_DIR}:/movies
            - ${DOCKER_DIRECTORY}/shared:/shared
        networks:
            traefik: null
        restart:        ${UNIVERSAL_RESTART_POLICY}
        labels:
            traefik.enable:                                            true
            traefik.http.routers.radarr-rtr.rule:                      Host(`${RADARR_SUBDOMAIN}.${DOMAIN_NAME}`)
            traefik.http.routers.radarr-rtr.entrypoints:               https
            traefik.http.routers.radarr-rtr.service:                   radarr-svc
            traefik.http.services.radarr-svc.loadbalancer.server.port: 7878
            traefik.http.routers.radarr-rtr.middlewares:               chain-oauth-google@file

    ####################################
    # TRANSMISSION (TORRENTING BEHIND VPN)
    ####################################

    transmission:
        container_name: transmission
        hostname:       ${TRANSMISSION_SUBDOMAIN}
        image:          haugene/transmission-openvpn:latest
        environment:
            PUID:                                    ${PUID}
            PGID:                                    ${PGID}
            OPENVPN_PROVIDER:                        ${OPENVPN_PROVIDER}
            OPENVPN_USERNAME:                        ${OPENVPN_USERNAME}
            OPENVPN_PASSWORD:                        ${OPENVPN_PASSWORD}
            TRANSMISSION_IDLE_SEEDING_LIMIT:         0
            TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED: "true"
            TRANSMISSION_WEB_UI:                     combustion
            TRANSMISSION_DOWNLOAD_DIR:               /downloads
            LOCAL_NETWORK:                           ${PHYSICAL_SERVER_NETWORK}
            TZ:                                      ${TZ}
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ${DOCKER_DIRECTORY}/transmission/config:/data/transmission-home
            - ${DOCKER_DIRECTORY}/transmission/watch:/data/watch
            - ${COMPLETED_DOWNLOADS}:/downloads
            - ${INCOMPLETE_DOWNLOADS}:/data/incomplete
            - ${DOCKER_DIRECTORY}/shared:/shared
        dns:
            - 8.8.8.8
            - 8.8.4.4
        cap_add:
            - NET_ADMIN
        devices:
            - /dev/net/tun
        networks:
            traefik: null
        restart:        ${UNIVERSAL_RESTART_POLICY}

        labels:
            traefik.enable:                                                  true
            traefik.http.routers.transmission-rtr.rule:                      Host(`${TRANSMISSION_SUBDOMAIN}.${DOMAIN_NAME}`)
            traefik.http.routers.transmission-rtr.entrypoints:               https
            traefik.http.routers.transmission-rtr.service:                   transmission-svc
            traefik.http.services.transmission-svc.loadbalancer.server.port: 9091
            traefik.http.routers.transmission-rtr.middlewares:               chain-oauth-google@file

    ####################################
    # JACKETT (TORRENTING INDEX SCRAPER)
    ####################################

    jackett:
        container_name: jackett
        image:          linuxserver/jackett:latest
        hostname:       ${JACKETT_SUBDOMAIN}
        environment:
            PUID: ${PUID}
            PGID: ${PGID}
            TZ:   ${TZ}
        volumes:
            - ${DOCKER_DIRECTORY}/jackett/config:/config
            - ${COMPLETED_DOWNLOADS}:/downloads
            - ${DOCKER_DIRECTORY}/shared:/shared
        networks:
            traefik: null
        restart:        ${UNIVERSAL_RESTART_POLICY}
        labels:
            traefik.enable:                                             true
            traefik.http.routers.jackett-rtr.rule:                      Host(`${JACKETT_SUBDOMAIN}.${DOMAIN_NAME}`)
            traefik.http.routers.jackett-rtr.entrypoints:               https
            traefik.http.routers.jackett-rtr.service:                   jackett-svc
            traefik.http.services.jackett-svc.loadbalancer.server.port: 9117
            traefik.http.routers.jackett-rtr.middlewares:               chain-oauth-google@file

    ####################################
    # PORTAINER (GUI CONTAINER MANAGEMENT)
    ####################################

    portainer:
        container_name: portainer
        image:          portainer/portainer-ce:latest
        hostname:       ${PORTAINER_SUBDOMAIN}
        environment:
            TZ: ${TZ}
        volumes:
            - ${DOCKER_DIRECTORY}/portainer/config:/data
            - ${DOCKER_DIRECTORY}/shared:/shared
        command:        "-H tcp://socket-proxy:2375 --admin-password='${ADMIN_HTPASSWD}'"
        networks:
            traefik:             null
            socket-proxy: null
        restart:        ${UNIVERSAL_RESTART_POLICY}
        labels:
            traefik.enable:                                               true
            traefik.http.routers.portainer-rtr.rule:                      Host(`${PORTAINER_SUBDOMAIN}.${DOMAIN_NAME}`)
            traefik.http.routers.portainer-rtr.entrypoints:               https
            traefik.http.routers.portainer-rtr.service:                   portainer-svc
            traefik.http.services.portainer-svc.loadbalancer.server.port: 9000
            traefik.http.routers.portainer-rtr.middlewares:               chain-oauth-google@file